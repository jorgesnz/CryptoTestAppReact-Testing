{"version":3,"file":"static/js/908.13e2947e.chunk.js","mappings":"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","sources":["pages/CRM/AccessDenied.jsx","pages/CRM/CRMPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport './AccessDenied.scss';\r\n\r\nconst AccessDenied = () => {\r\n  return (\r\n    <div className=\"access-denied-container\">\r\n      <div className=\"access-denied-box\">\r\n        <h2>Acceso Denegado</h2>\r\n        <p>No tienes permiso para acceder</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccessDenied;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AccessDenied from './AccessDenied';\r\nimport './CRMPage.scss';\r\n\r\nconst CRMPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [userRole, setUserRole] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem('userId'); // Asumiendo que el ID del usuario está almacenado en localStorage\r\n    // Fetch user role\r\n    axios.get(`http://localhost:5000/api/userdata/UserRole/${userId}/verify-role`, { headers: { Authorization: `Bearer ${localStorage.getItem('token')}` } })\r\n      .then(response => {\r\n        setUserRole(response.data.role);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching user role:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userRole === 'agent' || userRole === 'admin') {\r\n      // Fetch users from the database\r\n      axios.get('http://localhost:5000/api/crm/users')\r\n        .then(response => setUsers(response.data))\r\n        .catch(error => console.error('Error fetching users:', error));\r\n    }\r\n  }, [userRole]);\r\n\r\n  const handleSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const handleSelectUser = (userId) => {\r\n    setSelectedUsers(prevSelectedUsers => {\r\n      if (prevSelectedUsers.includes(userId)) {\r\n        return prevSelectedUsers.filter(id => id !== userId);\r\n      } else {\r\n        return [...prevSelectedUsers, userId];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDeleteSelected = async () => {\r\n    if (selectedUsers.length === 0) return;\r\n\r\n    const confirmDelete = window.confirm('Estas seguro de eliminar los usuarios seleccionados?');\r\n    if (confirmDelete) {\r\n      try {\r\n        await Promise.all(selectedUsers.map(userId => axios.delete(`http://localhost:5000/api/crm/user/${userId}`)));\r\n        setUsers(users.filter(user => !selectedUsers.includes(user._id)));\r\n        setSelectedUsers([]);\r\n        alert('Usuarios seleccionados eliminados exitosamente');\r\n      } catch (error) {\r\n        console.error('Error eliminando usuarios', error);\r\n        alert('Error al eliminar los usuarios');\r\n      }\r\n    }\r\n  };\r\n\r\n  const filteredUsers = users.filter(user => \r\n    `${user.firstName} ${user.lastName}`.toLowerCase().includes(search.toLowerCase()) || \r\n    user.email.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  if (loading) {\r\n    return <div>Cargando...</div>;\r\n  }\r\n\r\n  if (userRole !== 'agent' && userRole !== 'admin') {\r\n    return <AccessDenied />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"crm-container\">\r\n      <h1>CRM - CryptoTest App</h1>\r\n      <button className=\"user-mode-button\" onClick={() => navigate('/dashboard')}>Modo Usuario</button>\r\n      <div className=\"search-delete-container\">\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Búscar usuarios...\" \r\n          value={search} \r\n          onChange={handleSearch} \r\n          className=\"search-bar\"\r\n        />\r\n        {selectedUsers.length > 0 && (\r\n          <button className=\"delete-selected-button\" onClick={handleDeleteSelected}>\r\n            Borrar Selección\r\n          </button>\r\n        )}\r\n      </div>\r\n      <table className=\"user-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Selec.</th>\r\n            <th>Nombre</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredUsers.map(user => (\r\n            <tr key={user._id}>\r\n              <td>\r\n                <input \r\n                  type=\"checkbox\" \r\n                  checked={selectedUsers.includes(user._id)} \r\n                  onChange={() => handleSelectUser(user._id)} \r\n                />\r\n              </td>\r\n              <td onClick={() => navigate(`/crm/user/${user._id}`)}>\r\n                {user.firstName} {user.lastName}\r\n              </td>\r\n              <td onClick={() => navigate(`/crm/user/${user._id}`)}>\r\n                {user.email}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};  \r\n\r\nexport default CRMPage;\r\n"],"names":["AccessDenied","_jsx","className","children","_jsxs","CRMPage","users","setUsers","useState","search","setSearch","selectedUsers","setSelectedUsers","userRole","setUserRole","loading","setLoading","navigate","useNavigate","useEffect","userId","localStorage","getItem","axios","get","concat","headers","Authorization","then","response","data","role","catch","error","console","filteredUsers","filter","user","firstName","lastName","toLowerCase","includes","email","onClick","type","placeholder","value","onChange","e","target","length","async","window","confirm","Promise","all","map","delete","_id","alert","checked","handleSelectUser","prevSelectedUsers","id"],"sourceRoot":""}