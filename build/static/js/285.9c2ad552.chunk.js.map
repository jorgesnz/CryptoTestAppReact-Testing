{"version":3,"file":"static/js/285.9c2ad552.chunk.js","mappings":"kLAKA,MA4DA,EA5D+BA,KAC7B,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAC1BG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,KAC1BK,EAAMC,IAAWN,EAAAA,EAAAA,WAAS,GAC3BO,GAAWC,EAAAA,EAAAA,MAmBjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,SACZC,MAAOjB,EACPkB,SAAWC,GAAMlB,EAASkB,EAAEC,OAAOH,UAErCH,EAAAA,EAAAA,KAAA,YACEE,YAAY,QACZC,MAAOd,EACPe,SAAWC,GAAMf,EAAQe,EAAEC,OAAOH,UAEpCH,EAAAA,EAAAA,KAAA,SACEC,KAAK,iBACLE,MAAOZ,EACPa,SAAWC,GAAMb,EAAQa,EAAEC,OAAOH,UAEpCN,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLM,QAASd,EACTW,SAAWC,GAAMX,EAAQW,EAAEC,OAAOC,WAClC,2BAGJV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,UAAQQ,QA7CmBC,UAC/B,UACQC,EAAAA,EAAMC,KAAK,0CAA2C,CAC1DC,OAAQ5B,EACRE,QACAG,OACAE,OACAE,SAEFoB,MAAM,qCACNlB,EAAS,aAADmB,OAAc9B,GACxB,CAAE,MAAO+B,GACPC,QAAQD,MAAM,8BAA+BA,GAC7CF,MAAM,gCACR,GA+B8Cd,SAAC,2BAC3CC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,cAAcU,QAASA,IAAMb,GAAU,GAAGI,SAAC,gBAE3D,C","sources":["pages/CRM/CreateNotificationPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './CreateNotificationPage.scss';\r\n\r\nconst CreateNotificationPage = () => {\r\n  const { id } = useParams();\r\n  const [title, setTitle] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [read, setRead] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleCreateNotification = async () => {\r\n    try {\r\n      await axios.post(`http://localhost:5000/api/notifications`, {\r\n        userId: id,\r\n        title,\r\n        text,\r\n        date,\r\n        read\r\n      });\r\n      alert('Notification created successfully');\r\n      navigate(`/crm/user/${id}`);\r\n    } catch (error) {\r\n      console.error('Error creating notification', error);\r\n      alert('Failed to create notification');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-notification-container\">\r\n      <h1>Crear Notificación</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Titulo\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <textarea\r\n        placeholder=\"Texto\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"datetime-local\"\r\n        value={date}\r\n        onChange={(e) => setDate(e.target.value)}\r\n      />\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={read}\r\n          onChange={(e) => setRead(e.target.checked)}\r\n        />\r\n        Marcar como leída\r\n      </label>\r\n      <div className=\"buttons\">\r\n        <button onClick={handleCreateNotification}>Crear Notificación</button>\r\n        <button className=\"back-button\" onClick={() => navigate(-1)}>Volver</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateNotificationPage;\r\n"],"names":["CreateNotificationPage","id","useParams","title","setTitle","useState","text","setText","date","setDate","read","setRead","navigate","useNavigate","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","checked","onClick","async","axios","post","userId","alert","concat","error","console"],"sourceRoot":""}