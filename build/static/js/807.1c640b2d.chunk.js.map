{"version":3,"file":"static/js/807.1c640b2d.chunk.js","mappings":"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","sources":["pages/UserList.jsx","pages/UserDetail.jsx","pages/AdminPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport './UserList.scss';\r\n\r\nconst UserList = ({ users, onSelectUser }) => {\r\n    return (\r\n        <div className=\"user-list\">\r\n            {users.map(user => (\r\n                <div key={user._id} className=\"user-item\" onClick={() => onSelectUser(user._id)}>\r\n                    <div className=\"user-info\">\r\n                        <span className=\"user-name\">{user.firstName} {user.lastName}</span>\r\n                        <span className=\"user-email\">{user.email}</span>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './UserDetail.scss';\r\n\r\nconst UserDetail = ({ userId }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [wallets, setWallets] = useState([]);\r\n    const [deposit, setDeposit] = useState({ amount: 0, walletId: '' });\r\n    const [withdrawal, setWithdrawal] = useState({ amount: 0, walletId: '' });\r\n    const [role, setRole] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const token = localStorage.getItem('adminToken');\r\n                const response = await axios.get(`http://localhost:5000/api/admin/users/${userId}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                setUser(response.data);\r\n                setRole(response.data.role);\r\n\r\n                // Fetch wallets separately\r\n                const walletsResponse = await axios.get(`http://localhost:5000/api/admin/users/${userId}/wallets`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                setWallets(walletsResponse.data);\r\n            } catch (error) {\r\n                console.error('Error fetching user or wallets:', error);\r\n                alert('Error fetching user or wallets');\r\n            }\r\n        };\r\n        fetchUser();\r\n    }, [userId]);\r\n\r\n    const handleRoleChange = async () => {\r\n        try {\r\n            const token = localStorage.getItem('adminToken');\r\n            const response = await axios.put(`http://localhost:5000/api/admin/users/${userId}`, { role }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            setUser(response.data);\r\n            alert('Role updated');\r\n        } catch (error) {\r\n            console.error('Error updating role:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeposit = async () => {\r\n        if (!deposit.walletId) {\r\n            alert('Please select a wallet for the deposit.');\r\n            return;\r\n        }\r\n        try {\r\n            const token = localStorage.getItem('adminToken');\r\n            await axios.post(`http://localhost:5000/api/admin/users/${userId}/deposit`, deposit, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            alert('Deposit successful');\r\n        } catch (error) {\r\n            console.error('Error making deposit:', error);\r\n        }\r\n    };\r\n\r\n    const handleWithdrawal = async () => {\r\n        if (!withdrawal.walletId) {\r\n            alert('Please select a wallet for the withdrawal.');\r\n            return;\r\n        }\r\n        try {\r\n            const token = localStorage.getItem('adminToken');\r\n            await axios.post(`http://localhost:5000/api/admin/users/${userId}/withdrawal`, withdrawal, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            alert('Withdrawal successful');\r\n        } catch (error) {\r\n            console.error('Error making withdrawal:', error);\r\n        }\r\n    };\r\n\r\n    if (!user) {\r\n        return <div className=\"loading\">Loading user data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-detail\">\r\n            <h2>{user.firstName} {user.lastName}</h2>\r\n            <p>Email: {user.email}</p>\r\n            <p>Balance: {wallets && wallets.map(wallet => (\r\n                <span key={wallet._id}>{wallet.balance} {wallet.cryptocurrency}</span>\r\n            ))}</p>\r\n            <p>Role: {user.role}</p>\r\n            <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n                <option value=\"user\">User</option>\r\n                <option value=\"agent\">Agent</option>\r\n                <option value=\"admin\">Admin</option>\r\n            </select>\r\n            <button onClick={handleRoleChange}>Update Role</button>\r\n\r\n            <h3>Make a Deposit</h3>\r\n            <select value={deposit.walletId} onChange={(e) => setDeposit({ ...deposit, walletId: e.target.value })}>\r\n                <option value=\"\">Select Wallet</option>\r\n                {wallets && wallets.map(wallet => (\r\n                    <option key={wallet._id} value={wallet._id}>\r\n                        {wallet.cryptocurrency} - {wallet.address}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Amount\"\r\n                value={deposit.amount}\r\n                onChange={(e) => setDeposit({ ...deposit, amount: e.target.value })}\r\n            />\r\n            <button onClick={handleDeposit}>Add Deposit</button>\r\n\r\n            <h3>Make a Withdrawal</h3>\r\n            <select value={withdrawal.walletId} onChange={(e) => setWithdrawal({ ...withdrawal, walletId: e.target.value })}>\r\n                <option value=\"\">Select Wallet</option>\r\n                {wallets && wallets.map(wallet => (\r\n                    <option key={wallet._id} value={wallet._id}>\r\n                        {wallet.cryptocurrency} - {wallet.address}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Amount\"\r\n                value={withdrawal.amount}\r\n                onChange={(e) => setWithdrawal({ ...withdrawal, amount: e.target.value })}\r\n            />\r\n            <button onClick={handleWithdrawal}>Add Withdrawal</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport UserList from './UserList';\r\nimport UserDetail from './UserDetail';\r\nimport './AdminPage.scss';\r\n\r\nconst AdminPage = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const token = localStorage.getItem('adminToken');\r\n                if (!token) {\r\n                    throw new Error('No token found');\r\n                }\r\n                const response = await axios.get('http://localhost:5000/api/admin/users', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                });\r\n                setUsers(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            }\r\n        };\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const filteredUsers = users.filter(user => \r\n        user.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        user.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    return (\r\n        <div className=\"admin-page\">\r\n            <div className=\"header\">\r\n                <h1>Admin Dashboard</h1>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search users...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"user-list\">\r\n                    <UserList users={filteredUsers} onSelectUser={setSelectedUser} />\r\n                </div>\r\n                <div className=\"user-detail\">\r\n                    {selectedUser ? (\r\n                        <UserDetail userId={selectedUser} />\r\n                    ) : (\r\n                        <div className=\"no-user-selected\">Select a user to view details</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"names":["_ref","users","onSelectUser","_jsx","className","children","map","user","onClick","_id","_jsxs","firstName","lastName","email","userId","setUser","useState","wallets","setWallets","deposit","setDeposit","amount","walletId","withdrawal","setWithdrawal","role","setRole","useEffect","async","token","localStorage","getItem","response","axios","get","concat","headers","Authorization","data","walletsResponse","error","console","alert","fetchUser","wallet","balance","cryptocurrency","value","onChange","e","target","put","address","type","placeholder","post","AdminPage","setUsers","selectedUser","setSelectedUser","searchTerm","setSearchTerm","Error","fetchUsers","filteredUsers","filter","toLowerCase","includes","UserList","UserDetail"],"sourceRoot":""}