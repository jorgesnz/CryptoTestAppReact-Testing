{"version":3,"file":"static/js/372.972d9203.chunk.js","mappings":"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","sources":["assets/logo-dark.svg","components/ModalContainer.jsx","widgets/Chat/style.js","widgets/Chat/index.jsx"],"sourcesContent":["var _path, _path2, _path3, _path4;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLogoDark(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 88,\n    height: 88,\n    viewBox: \"0 0 88 88\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M44.0001 88C68.3007 88 88 68.3003 88 43.9998C88 19.6994 68.3007 0 44.0001 0C19.6995 0 0 19.6994 0 43.9998C0 68.3003 19.6995 88 44.0001 88Z\",\n    fill: \"#171717\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.9381 77.0803C26.8864 77.0803 12.2031 62.242 12.2031 44C12.2031 25.7579 26.8864 10.9197 44.9381 10.9197C53.163 10.9197 60.9306 13.9681 66.9692 19.5264C67.5986 20.1057 67.597 21.095 66.9955 21.7038L64.2724 24.4599C63.6706 25.069 62.6966 25.0655 62.0601 24.4934C57.3367 20.2492 51.3122 17.9299 44.9381 17.9299C30.7095 17.9299 19.1401 29.6291 19.1401 44C19.1401 58.3709 30.7172 70.0701 44.9381 70.0701C51.1049 70.0701 56.9763 67.8812 61.6377 63.8707C62.286 63.3129 63.2591 63.3297 63.8483 63.9509L66.5168 66.7645C67.1059 67.3856 67.0875 68.3748 66.4462 68.9407C60.4834 74.2014 52.9011 77.0803 44.9381 77.0803Z\",\n    fill: \"#E0F64B\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.6435 59.0948C53.3349 59.0948 60.3807 52.0491 60.3807 43.3576C60.3807 34.6662 53.3349 27.6204 44.6435 27.6204C35.9521 27.6204 28.9062 34.6662 28.9062 43.3576C28.9062 52.0491 35.9521 59.0948 44.6435 59.0948Z\",\n    fill: \"#E0F64B\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.3225 53.3138C49.6438 53.3138 53.9576 49 53.9576 43.6787C53.9576 38.3575 49.6438 34.0437 44.3225 34.0437C39.0013 34.0437 34.6875 38.3575 34.6875 43.6787C34.6875 49 39.0013 53.3138 44.3225 53.3138Z\",\n    fill: \"#171717\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoDark);\nexport default __webpack_public_path__ + \"static/media/logo-dark.e7ad6f91d72b36dc8ecb46109f1899ea.svg\";\nexport { ForwardRef as ReactComponent };","// utils\nimport PropTypes from 'prop-types';\nimport loadable from '@loadable/component'\n\n// hooks\nimport {useModal} from '@contexts/modalContext';\nimport {useWindowSize} from 'react-use';\n\n// components\nimport Fade from '@mui/material/Fade';\nimport {ClickAwayListener} from '@mui/base/ClickAwayListener';\nimport Spring from '@components/Spring';\nconst Modal = loadable(() => import('@mui/material/Modal'));\n\nconst Slide = ({children}) => <Spring type=\"slide\">{children}</Spring>\n\nconst FadeIn = ({children}) => <Fade in timeout={300}>{children}</Fade>\n\nconst ModalContainer = ({open, children, isSidebarWidget = false}) => {\n    const {handleClose} = useModal();\n    const {width} = useWindowSize();\n\n    const AnimatedWrapper = isSidebarWidget && width >= 768 ? Slide : FadeIn;\n    const props = isSidebarWidget && width > 1280 ? {reverse: !open} : {};\n\n    return (\n        <Modal open={open}\n               onClose={handleClose}\n               closeAfterTransition\n               componentsProps={{backdrop: {className: isSidebarWidget ? 'backdrop-sidebar' : ''}}}>\n            <Fade in={open} timeout={300}>\n                <div className={`modal-container ${isSidebarWidget ? 'modal-container-sidebar' : ''}`}>\n                    <ClickAwayListener onClickAway={handleClose}>\n                       <div className=\"modal\">\n                           <AnimatedWrapper {...props}>\n                               {children}\n                           </AnimatedWrapper>\n                       </div>\n                    </ClickAwayListener>\n                </div>\n            </Fade>\n        </Modal>\n    )\n}\n\nModalContainer.propTypes = {\n    open: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default ModalContainer","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\n\nconst DateLabel = styled.div`\n  font-size: 10px;\n  font-weight: 600;\n  margin-left: 40px;\n  color: var(--text-light);\n`;\n\nconst Message = styled.div`\n  margin-left: 40px;\n\n  .container {\n    display: flex;\n    gap: 16px;\n    position: relative;\n  }\n\n  .avatar {\n    width: 24px;\n    height: 24px;\n    margin-top: 8px;\n    position: absolute;\n    left: -40px;\n  }\n\n  .content {\n    font-weight: 600;\n    font-size: 14px;\n    padding: 8px 32px 8px 8px;\n    border-radius: 12px;\n    background-color: ${theme('theme', {\n      light: '#F7F7F7',\n      dark: 'var(--header-light)',\n    })};\n    position: relative;\n    flex-grow: 1;\n\n    .timestamp {\n      position: absolute;\n      right: 8px;\n      bottom: 8px;\n      font-size: 8px;\n    }\n  }\n`;\n\nconst Button = styled.button`\n  height: 40px;\n  border-radius: 12px;\n  font-size: 14px;\n  font-weight: 600;\n  padding: 0 16px;\n  color: var(--header);\n  border: 1px solid ${theme('theme', {\n    light: 'var(--header)',\n    dark: 'var(--border)',\n  })};\n  transition: all var(--transition);\n\n  &:hover {\n    background: var(--accent);\n    color: var(--header-light);\n    border-color: var(--accent)\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 16px;\n`;\n\nconst FormWrapper = styled.div`\n    padding: 24px 8px 16px 16px;\n`;\n\nexport {Message, Button, Form, DateLabel, FormWrapper};","// styled components\nimport {Message, Form, Button, DateLabel, FormWrapper} from './style';\n\n// components\nimport ModalContainer from '@components/ModalContainer';\nimport ScrollContainer from '@components/ScrollContainer';\n\n// hooks\nimport {useModal} from '@contexts/modalContext';\nimport useMeasure from 'react-use-measure';\n\n// assets\nimport logo from '@assets/logo-dark.svg';\nimport avatar from '@assets/avatar.webp';\n\nconst Chat = ({isSidebarWidget}) => {\n    const [ref, {height}] = useMeasure();\n    const {open, modal} = useModal();\n\n    return (\n        <ModalContainer open={open && modal === 'support'} isSidebarWidget={isSidebarWidget}>\n            <div className=\"card widget_body h-100 g-0\">\n                <ScrollContainer height={height} bg=\"widget-bg\">\n                    <div className=\"track\">\n                        <DateLabel>Today</DateLabel>\n                        <div className=\"d-flex flex-column g-24\">\n                            <div className=\"d-flex flex-column g-8\">\n                                <Message>\n                                    <div className=\"content\">\n                                        <p className=\"text-header\">\n                                            Welcome to InCrypto Live Chat. Your inquiry is important to us.\n                                        </p>\n                                        <span className=\"timestamp\">12:12</span>\n                                    </div>\n                                </Message>\n                                <Message>\n                                    <div className=\"d-flex flex-column g-8\">\n                                        <div className=\"container\">\n                                            <img className=\"avatar\" src={logo} alt=\"InCrypto Support\"/>\n                                            <div className=\"content\">\n                                                <p className=\"text-header\">\n                                                    Choose one of the topics below:\n                                                </p>\n                                                <span className=\"timestamp\">12:13</span>\n                                            </div>\n                                        </div>\n                                        <div className=\"d-flex flex-wrap g-8\">\n                                            <Button>Buy Crypto</Button>\n                                            <Button>NFT</Button>\n                                            <Button>Deposit</Button>\n                                            <Button>Withdraw</Button>\n                                            <Button>Exchange</Button>\n                                            <Button>AML Check</Button>\n                                            <Button>Stacking</Button>\n                                        </div>\n                                    </div>\n                                </Message>\n                            </div>\n                            <Message>\n                                <div className=\"container\">\n                                    <img className=\"avatar\" src={avatar} alt=\"User\"/>\n                                    <div className=\"content\">\n                                        <p className=\"text-header\">\n                                            Deposit\n                                        </p>\n                                        <span className=\"timestamp\">12:13</span>\n                                    </div>\n                                </div>\n                            </Message>\n                            <div className=\"d-flex flex-column g-8\">\n                                <Message>\n                                    <div className=\"content\">\n                                        <p className=\"text-header\">\n                                            1. Choose the cryptocurrency you'd like to deposit so the appropriate address\n                                            will be generated.\n                                        </p>\n                                        <p className=\"text-header\">\n                                            2. Copy the address or scan the QR code (while using external wallet app).\n                                        </p>\n                                        <p className=\"text-header\">\n                                            3. Wait for your crypto to arrive. This can normally take between 10-20 minutes\n                                            to arrive.\n                                        </p>\n                                        <p className=\"text-header\">\n                                            4. Done!\n                                        </p>\n                                        <span className=\"timestamp\">12:13</span>\n                                    </div>\n                                </Message>\n                                <Message>\n                                    <div className=\"d-flex flex-column g-8\">\n                                        <div className=\"container\">\n                                            <img className=\"avatar\" src={logo} alt=\"InCrypto Support\"/>\n                                            <div className=\"content\">\n                                                <p className=\"text-header\">\n                                                    Was issue resolved?\n                                                </p>\n                                                <span className=\"timestamp\">12:14</span>\n                                            </div>\n                                        </div>\n                                        <div className=\"d-flex flex-wrap g-8\">\n                                            <Button>Resolved</Button>\n                                            <Button>Unresolved</Button>\n                                        </div>\n                                    </div>\n                                </Message>\n                            </div>\n                            <Message>\n                                <div className=\"container\">\n                                    <img className=\"avatar\" src={avatar} alt=\"User\"/>\n                                    <div className=\"content\">\n                                        <p className=\"text-header\">\n                                            Resolved\n                                        </p>\n                                        <span className=\"timestamp\">12:15</span>\n                                    </div>\n                                </div>\n                            </Message>\n                            <Message>\n                                <div className=\"container\">\n                                    <img className=\"avatar\" src={logo} alt=\"InCrypto Support\"/>\n                                    <div className=\"content\">\n                                        <p className=\"text-header\">\n                                            Dialogue is over.\n                                        </p>\n                                        <span className=\"timestamp\">12:14</span>\n                                    </div>\n                                </div>\n                            </Message>\n                        </div>\n                    </div>\n                </ScrollContainer>\n                <FormWrapper ref={ref}>\n                    <Form className=\"field-input\">\n                        <input className=\"flex-1\" placeholder=\"Message\"/>\n                        <button className=\"btn btn--pill\">Send</button>\n                    </Form>\n                </FormWrapper>\n            </div>\n        </ModalContainer>\n    )\n}\n\nexport default Chat"],"names":["Modal","loadable","Slide","_ref","children","_jsx","Spring","type","FadeIn","_ref2","Fade","in","timeout","_ref3","open","isSidebarWidget","handleClose","useModal","width","useWindowSize","AnimatedWrapper","props","reverse","onClose","closeAfterTransition","componentsProps","backdrop","className","concat","ClickAwayListener","onClickAway","DateLabel","styled","div","withConfig","componentId","Message","theme","light","dark","Button","button","Form","form","FormWrapper","ref","height","useMeasure","modal","ModalContainer","_jsxs","ScrollContainer","bg","src","logo","alt","avatar","placeholder"],"sourceRoot":""}