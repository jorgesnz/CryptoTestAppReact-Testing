{"version":3,"file":"static/js/971.99ba2bd2.chunk.js","mappings":"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","sources":["pages/CRM/AccessDenied.jsx","pages/CRM/UserDetailPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport './AccessDenied.scss';\r\n\r\nconst AccessDenied = () => {\r\n  return (\r\n    <div className=\"access-denied-container\">\r\n      <div className=\"access-denied-box\">\r\n        <h2>Acceso Denegado</h2>\r\n        <p>No tienes permiso para acceder</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccessDenied;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa';\r\nimport './UserDetailPage.scss';\r\nimport AccessDenied from './AccessDenied';\r\n\r\nconst UserDetailPage = () => {\r\n  const { id } = useParams();\r\n  const [user, setUser] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showRoleModal, setShowRoleModal] = useState(false);\r\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\r\n  const [userRole, setUserRole] = useState('');\r\n  const [newRole, setNewRole] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem('userId');\r\n    axios.get(`http://localhost:5000/api/userdata/UserRole/${userId}/verify-role`, { headers: { Authorization: `Bearer ${localStorage.getItem('token')}` } })\r\n      .then(response => {\r\n        setUserRole(response.data.role);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching user role:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/api/crm/user/${id}`)\r\n      .then(response => setUser(response.data))\r\n      .catch(error => console.error('Error fetching user details:', error));\r\n\r\n    axios.get(`http://localhost:5000/api/notifications/user/${id}`)\r\n      .then(response => setNotifications(response.data))\r\n      .catch(error => console.error('Error fetching notifications:', error));\r\n\r\n    axios.get(`http://localhost:5000/api/transactions/${id}`)\r\n      .then(response => setTransactions(response.data))\r\n      .catch(error => console.error('Error fetching transactions:', error));\r\n  }, [id]);\r\n\r\n  const handleDeleteAccount = async () => {\r\n    const confirmDelete = window.confirm('¿Estas seguro que quieres eliminar esta cuenta?');\r\n    if (confirmDelete) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/crm/user/${id}`);\r\n        alert('Cuenta borrada con éxito');\r\n        navigate('/crm');\r\n      } catch (error) {\r\n        console.error('Error deleting account', error);\r\n        alert('Error al borrar la cuenta');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteTransaction = async (transactionId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/transactions/${transactionId}`);\r\n      setTransactions(transactions.filter(transaction => transaction._id !== transactionId));\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error('Error deleting transaction', error);\r\n      alert('Error al borrar la transacción');\r\n    }\r\n  };\r\n\r\n  const openModal = (transaction) => {\r\n    setSelectedTransaction(transaction);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedTransaction(null);\r\n    setShowModal(false);\r\n  };\r\n\r\n  const openRoleModal = () => {\r\n    setShowRoleModal(true);\r\n  };\r\n\r\n  const closeRoleModal = () => {\r\n    setShowRoleModal(false);\r\n    setNewRole('');\r\n  };\r\n\r\n  const handleRoleChange = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/user/role/${id}`, { role: newRole }, { headers: { Authorization: `Bearer ${localStorage.getItem('token')}` } });\r\n      setUser({ ...user, role: newRole });\r\n      closeRoleModal();\r\n      alert('Rol cambiado con exito');\r\n    } catch (error) {\r\n      console.error('Error updating role', error);\r\n      alert('Error al cambiar rol');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  if (userRole !== 'agent' && userRole !== 'admin') {\r\n    return <AccessDenied />;\r\n  }\r\n\r\n  if (!user) return <div>Loading user details...</div>;\r\n\r\n  return (\r\n    <div className=\"user-detail-container\">\r\n      <h1>{user.firstName} {user.lastName}</h1>\r\n      <p>Email: {user.email}</p>\r\n      <div className=\"buttons\">\r\n        <button className=\"btn add-deposit\" onClick={() => navigate(`/crm/user/${id}/add-deposit`)}>Añadir Depósito</button>\r\n        <button className=\"btn create-notification\" onClick={() => navigate(`/crm/user/${id}/create-notification`)}>Crear Notificación</button>\r\n        <button className=\"btn delete-account\" onClick={handleDeleteAccount}>Borrar Cuenta</button>\r\n        {userRole === 'admin' && (\r\n          <button className=\"btn change-role\" onClick={openRoleModal}>Cambiar Rol</button>\r\n        )}\r\n        <button className=\"btn back\" onClick={() => navigate(-1)}>Volver</button>\r\n      </div>\r\n      <h2>Wallets</h2>\r\n      <ul className=\"wallets-list\">\r\n        {user.wallets.map(wallet => (\r\n          <li key={wallet._id} className=\"wallet-item\">\r\n            <span className=\"wallet-cryptocurrency\">{wallet.cryptocurrency}</span>: <span className=\"wallet-balance\">{wallet.balance}</span> (Address: <span className=\"wallet-address\">{wallet.address}</span>)\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>Notificaciones</h2>\r\n      <ul className=\"notification-list\">\r\n        {notifications.map(notification => (\r\n          <li key={notification._id} className={`notification-item ${notification.read ? 'read' : 'unread'}`}>\r\n            <div className=\"notification-content\" onClick={() => navigate(`/crm/notification/${notification._id}/edit`)}>\r\n              <h3>{notification.title}</h3>\r\n              <p>{notification.text}</p>\r\n              <p><small>{new Date(notification.date).toLocaleString()}</small></p>\r\n            </div>\r\n            <FaEdit className=\"icon edit-icon\" />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>Transacciones</h2>\r\n      <ul className=\"transaction-list\">\r\n        {transactions.map(transaction => (\r\n          <li key={transaction._id} className=\"transaction-item\">\r\n            <strong>{transaction.type}:</strong> {transaction.amount} {transaction.currencyLabel}\r\n            <p><small>{new Date(transaction.date).toLocaleString()}</small></p>\r\n            <FaTrashAlt className=\"icon delete-icon\" onClick={() => openModal(transaction)} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {showModal && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3><strong>Borrar Transacción</strong></h3>\r\n            <p>¿Estás seguro de eliminar esta transacción del historial del usuario?</p>\r\n            <p><strong>{selectedTransaction.type}</strong>: {selectedTransaction.amount} {selectedTransaction.currencyLabel}</p>\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"btn\" onClick={() => handleDeleteTransaction(selectedTransaction._id)}>Aceptar</button>\r\n              <button className=\"btn\" onClick={closeModal}>Cancelar</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showRoleModal && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3><strong>Cambiar Rol</strong></h3>\r\n            <p>Selecciona el nuevo rol para el usuario:</p>\r\n            <select value={newRole} onChange={(e) => setNewRole(e.target.value)}>\r\n              <option value=\"\">Selecciona un rol</option>\r\n              <option value=\"user\">User</option>\r\n              <option value=\"agent\">Agent</option>\r\n              <option value=\"admin\">Admin</option>\r\n            </select>\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"btn\" onClick={handleRoleChange}>Aceptar</button>\r\n              <button className=\"btn\" onClick={closeRoleModal}>Cancelar</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDetailPage;\r\n"],"names":["AccessDenied","_jsx","className","children","_jsxs","UserDetailPage","id","useParams","user","setUser","useState","notifications","setNotifications","transactions","setTransactions","showModal","setShowModal","showRoleModal","setShowRoleModal","selectedTransaction","setSelectedTransaction","userRole","setUserRole","newRole","setNewRole","loading","setLoading","navigate","useNavigate","useEffect","userId","localStorage","getItem","axios","get","concat","headers","Authorization","then","response","data","role","catch","error","console","closeRoleModal","firstName","lastName","email","onClick","async","window","confirm","delete","alert","openRoleModal","wallets","map","wallet","cryptocurrency","balance","address","_id","notification","read","title","text","Date","date","toLocaleString","FaEdit","transaction","type","amount","currencyLabel","FaTrashAlt","openModal","transactionId","filter","handleDeleteTransaction","closeModal","value","onChange","e","target","put"],"sourceRoot":""}